<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:s1="http://skats.net/services/literalTypes" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://skats.net/services/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://skats.net/services/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema targetNamespace="http://skats.net/services/">
      <s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <s:import namespace="http://schemas.xmlsoap.org/wsdl/" />
      <s:simpleType name="GeoPlaceType">
        <s:restriction base="s:string">
          <s:enumeration value="ZipCode" />
          <s:enumeration value="City" />
          <s:enumeration value="State" />
          <s:enumeration value="ThreeDigitZipCode" />
        </s:restriction>
      </s:simpleType>
      <s:complexType name="ArrayOfGeoPlaceDistance">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:attribute wsdl:arrayType="tns:GeoPlaceDistance[]" ref="soapenc:arrayType" />
          </s:restriction>
        </s:complexContent>
      </s:complexType>
      <s:complexType name="GeoPlaceDistance">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="ToPlace" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ToState" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Distance" type="s:float" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="AuthenticationHeader">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="SessionID" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="FilterType">
        <s:restriction base="s:string">
          <s:enumeration value="None" />
          <s:enumeration value="StartsWith" />
          <s:enumeration value="EndsWith" />
          <s:enumeration value="Anywhere" />
        </s:restriction>
      </s:simpleType>
      <s:complexType name="GeoPlaceDetails">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Type" type="tns:GeoPlaceType" />
          <s:element minOccurs="1" maxOccurs="1" name="State" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LatDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LatRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonRadians" type="s:float" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfGeoPlaceDetails">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:attribute wsdl:arrayType="tns:GeoPlaceDetails[]" ref="soapenc:arrayType" />
          </s:restriction>
        </s:complexContent>
      </s:complexType>
      <s:complexType name="ArrayOfUserPlaceDetail">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:attribute wsdl:arrayType="tns:UserPlaceDetail[]" ref="soapenc:arrayType" />
          </s:restriction>
        </s:complexContent>
      </s:complexType>
      <s:complexType name="UserPlaceDetail">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Id" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Address" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="City" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="State" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ZipCode" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Category" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Data" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LatDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LatRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="Distance" type="s:float" />
        </s:sequence>
      </s:complexType>
    </s:schema>
    <s:schema elementFormDefault="qualified" targetNamespace="http://skats.net/services/literalTypes">
      <s:element name="ArrayOfGeoPlaceDistance" nillable="true" type="s1:ArrayOfGeoPlaceDistance" />
      <s:complexType name="ArrayOfGeoPlaceDistance">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="GeoPlaceDistance" nillable="true" type="s1:GeoPlaceDistance" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="GeoPlaceDistance">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="ToPlace" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ToState" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Distance" type="s:float" />
        </s:sequence>
      </s:complexType>
      <s:element name="float" type="s:float" />
      <s:element name="GeoPlaceDetails" nillable="true" type="s1:GeoPlaceDetails" />
      <s:complexType name="GeoPlaceDetails">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Type" type="s1:GeoPlaceType" />
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LatDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LatRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonRadians" type="s:float" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="GeoPlaceType">
        <s:restriction base="s:string">
          <s:enumeration value="ZipCode" />
          <s:enumeration value="City" />
          <s:enumeration value="State" />
          <s:enumeration value="ThreeDigitZipCode" />
        </s:restriction>
      </s:simpleType>
      <s:element name="ArrayOfGeoPlaceDetails" nillable="true" type="s1:ArrayOfGeoPlaceDetails" />
      <s:complexType name="ArrayOfGeoPlaceDetails">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="GeoPlaceDetails" nillable="true" type="s1:GeoPlaceDetails" />
        </s:sequence>
      </s:complexType>
      <s:element name="ArrayOfUserPlaceDetail" nillable="true" type="s1:ArrayOfUserPlaceDetail" />
      <s:complexType name="ArrayOfUserPlaceDetail">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="UserPlaceDetail" nillable="true" type="s1:UserPlaceDetail" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="UserPlaceDetail">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Id" type="s:int" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="City" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="State" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ZipCode" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Category" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Data" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LatDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonDegrees" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LatRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="LonRadians" type="s:float" />
          <s:element minOccurs="1" maxOccurs="1" name="Distance" type="s:float" />
        </s:sequence>
      </s:complexType>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetPlacesWithinSoapIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:float" />
    <wsdl:part name="placeTypeToFind" type="tns:GeoPlaceType" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinSoapOut">
    <wsdl:part name="GetPlacesWithinResult" type="tns:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredSoapIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:float" />
    <wsdl:part name="placeTypeToFind" type="tns:GeoPlaceType" />
    <wsdl:part name="filter" type="s:string" />
    <wsdl:part name="filterType" type="tns:FilterType" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredSoapOut">
    <wsdl:part name="GetPlacesWithinFilteredResult" type="tns:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesSoapIn">
    <wsdl:part name="place1" type="s:string" />
    <wsdl:part name="state1" type="s:string" />
    <wsdl:part name="place2" type="s:string" />
    <wsdl:part name="state2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesSoapOut">
    <wsdl:part name="GetDistanceBetweenPlacesResult" type="s:float" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsSoapIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsSoapOut">
    <wsdl:part name="GetPlaceDetailsResult" type="tns:GeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetAllStatesSoapIn" />
  <wsdl:message name="GetAllStatesSoapOut">
    <wsdl:part name="GetAllStatesResult" type="tns:ArrayOfGeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetAllStatesAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetAllUserPlacesSoapIn" />
  <wsdl:message name="GetAllUserPlacesSoapOut">
    <wsdl:part name="GetAllUserPlacesResult" type="tns:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetAllUserPlacesAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="SaveUserPlacesSoapIn">
    <wsdl:part name="places" type="tns:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="SaveUserPlacesSoapOut" />
  <wsdl:message name="SaveUserPlacesAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinSoapIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:float" />
    <wsdl:part name="category" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinSoapOut">
    <wsdl:part name="GetUserPlacesWithinResult" type="tns:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideSoapIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideSoapOut">
    <wsdl:part name="GetPlacesInsideResult" type="tns:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideAuthenticationHeader">
    <wsdl:part name="AuthenticationHeader" type="tns:AuthenticationHeader" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinHttpGetIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="placeTypeToFind" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredHttpGetIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="placeTypeToFind" type="s:string" />
    <wsdl:part name="filter" type="s:string" />
    <wsdl:part name="filterType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesHttpGetIn">
    <wsdl:part name="place1" type="s:string" />
    <wsdl:part name="state1" type="s:string" />
    <wsdl:part name="place2" type="s:string" />
    <wsdl:part name="state2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesHttpGetOut">
    <wsdl:part name="Body" element="s1:float" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsHttpGetIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsHttpGetOut">
    <wsdl:part name="Body" element="s1:GeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetAllStatesHttpGetIn" />
  <wsdl:message name="GetAllStatesHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetAllUserPlacesHttpGetIn" />
  <wsdl:message name="GetAllUserPlacesHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinHttpGetIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="category" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideHttpGetIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideHttpGetOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinHttpPostIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="placeTypeToFind" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredHttpPostIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="placeTypeToFind" type="s:string" />
    <wsdl:part name="filter" type="s:string" />
    <wsdl:part name="filterType" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesWithinFilteredHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesHttpPostIn">
    <wsdl:part name="place1" type="s:string" />
    <wsdl:part name="state1" type="s:string" />
    <wsdl:part name="place2" type="s:string" />
    <wsdl:part name="state2" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetDistanceBetweenPlacesHttpPostOut">
    <wsdl:part name="Body" element="s1:float" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsHttpPostIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlaceDetailsHttpPostOut">
    <wsdl:part name="Body" element="s1:GeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetAllStatesHttpPostIn" />
  <wsdl:message name="GetAllStatesHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDetails" />
  </wsdl:message>
  <wsdl:message name="GetAllUserPlacesHttpPostIn" />
  <wsdl:message name="GetAllUserPlacesHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinHttpPostIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
    <wsdl:part name="distance" type="s:string" />
    <wsdl:part name="category" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserPlacesWithinHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfUserPlaceDetail" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideHttpPostIn">
    <wsdl:part name="place" type="s:string" />
    <wsdl:part name="state" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetPlacesInsideHttpPostOut">
    <wsdl:part name="Body" element="s1:ArrayOfGeoPlaceDistance" />
  </wsdl:message>
  <wsdl:portType name="GeoPlacesSoap">
    <wsdl:operation name="GetPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesWithinSoapIn" />
      <wsdl:output message="tns:GetPlacesWithinSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes), filter - string to filter results, filterType - type of filter (StartsWith, EndsWith, Anywhere, None).</documentation>
      <wsdl:input message="tns:GetPlacesWithinFilteredSoapIn" />
      <wsdl:output message="tns:GetPlacesWithinFilteredSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a distance in miles between two geo places. Parameters: place1 - place name (65 char max), state1 - 2 letter state code (not required for zip codes), place2 - place name (65 char max), state2 - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetDistanceBetweenPlacesSoapIn" />
      <wsdl:output message="tns:GetDistanceBetweenPlacesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a geo place details: name, type, state and coordinates. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlaceDetailsSoapIn" />
      <wsdl:output message="tns:GetPlaceDetailsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all US states.</documentation>
      <wsdl:input message="tns:GetAllStatesSoapIn" />
      <wsdl:output message="tns:GetAllStatesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all user-defined places.</documentation>
      <wsdl:input message="tns:GetAllUserPlacesSoapIn" />
      <wsdl:output message="tns:GetAllUserPlacesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SaveUserPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Saves user-defined places.</documentation>
      <wsdl:input message="tns:SaveUserPlacesSoapIn" />
      <wsdl:output message="tns:SaveUserPlacesSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of user-defined places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, category - an optional category, if not empy only user-defined places that match the category will be returned.</documentation>
      <wsdl:input message="tns:GetUserPlacesWithinSoapIn" />
      <wsdl:output message="tns:GetUserPlacesWithinSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places inside a given place. If zip code passed in then cities with that zip code are returned. If a city/state passed in then zip codes in that city are returned. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesInsideSoapIn" />
      <wsdl:output message="tns:GetPlacesInsideSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GeoPlacesHttpGet">
    <wsdl:operation name="GetPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesWithinHttpGetIn" />
      <wsdl:output message="tns:GetPlacesWithinHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes), filter - string to filter results, filterType - type of filter (StartsWith, EndsWith, Anywhere, None).</documentation>
      <wsdl:input message="tns:GetPlacesWithinFilteredHttpGetIn" />
      <wsdl:output message="tns:GetPlacesWithinFilteredHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a distance in miles between two geo places. Parameters: place1 - place name (65 char max), state1 - 2 letter state code (not required for zip codes), place2 - place name (65 char max), state2 - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetDistanceBetweenPlacesHttpGetIn" />
      <wsdl:output message="tns:GetDistanceBetweenPlacesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a geo place details: name, type, state and coordinates. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlaceDetailsHttpGetIn" />
      <wsdl:output message="tns:GetPlaceDetailsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all US states.</documentation>
      <wsdl:input message="tns:GetAllStatesHttpGetIn" />
      <wsdl:output message="tns:GetAllStatesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all user-defined places.</documentation>
      <wsdl:input message="tns:GetAllUserPlacesHttpGetIn" />
      <wsdl:output message="tns:GetAllUserPlacesHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of user-defined places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, category - an optional category, if not empy only user-defined places that match the category will be returned.</documentation>
      <wsdl:input message="tns:GetUserPlacesWithinHttpGetIn" />
      <wsdl:output message="tns:GetUserPlacesWithinHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places inside a given place. If zip code passed in then cities with that zip code are returned. If a city/state passed in then zip codes in that city are returned. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesInsideHttpGetIn" />
      <wsdl:output message="tns:GetPlacesInsideHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="GeoPlacesHttpPost">
    <wsdl:operation name="GetPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesWithinHttpPostIn" />
      <wsdl:output message="tns:GetPlacesWithinHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, placeTypeToFind - type of place to look for: ZipCode, City (including any villages, towns, etc) or ThreeDigitZipCode (unique 3-digit zip codes), filter - string to filter results, filterType - type of filter (StartsWith, EndsWith, Anywhere, None).</documentation>
      <wsdl:input message="tns:GetPlacesWithinFilteredHttpPostIn" />
      <wsdl:output message="tns:GetPlacesWithinFilteredHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a distance in miles between two geo places. Parameters: place1 - place name (65 char max), state1 - 2 letter state code (not required for zip codes), place2 - place name (65 char max), state2 - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetDistanceBetweenPlacesHttpPostIn" />
      <wsdl:output message="tns:GetDistanceBetweenPlacesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a geo place details: name, type, state and coordinates. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlaceDetailsHttpPostIn" />
      <wsdl:output message="tns:GetPlaceDetailsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all US states.</documentation>
      <wsdl:input message="tns:GetAllStatesHttpPostIn" />
      <wsdl:output message="tns:GetAllStatesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns an array of all user-defined places.</documentation>
      <wsdl:input message="tns:GetAllUserPlacesHttpPostIn" />
      <wsdl:output message="tns:GetAllUserPlacesHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of user-defined places within a specified distance from a given place. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes), distance - distance in miles, category - an optional category, if not empy only user-defined places that match the category will be returned.</documentation>
      <wsdl:input message="tns:GetUserPlacesWithinHttpPostIn" />
      <wsdl:output message="tns:GetUserPlacesWithinHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns a list of geo places inside a given place. If zip code passed in then cities with that zip code are returned. If a city/state passed in then zip codes in that city are returned. Parameters: place - place name (65 char max), state - 2 letter state code (not required for zip codes).</documentation>
      <wsdl:input message="tns:GetPlacesInsideHttpPostIn" />
      <wsdl:output message="tns:GetPlacesInsideHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GeoPlacesSoap" type="tns:GeoPlacesSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="GetPlacesWithin">
      <soap:operation soapAction="http://skats.net/services/GetPlacesWithin" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetPlacesWithinAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <soap:operation soapAction="http://skats.net/services/GetPlacesWithinFiltered" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetPlacesWithinFilteredAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <soap:operation soapAction="http://skats.net/services/GetDistanceBetweenPlaces" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetDistanceBetweenPlacesAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <soap:operation soapAction="http://skats.net/services/GetPlaceDetails" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetPlaceDetailsAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <soap:operation soapAction="http://skats.net/services/GetAllStates" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetAllStatesAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <soap:operation soapAction="http://skats.net/services/GetAllUserPlaces" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetAllUserPlacesAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SaveUserPlaces">
      <soap:operation soapAction="http://skats.net/services/SaveUserPlaces" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:SaveUserPlacesAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <soap:operation soapAction="http://skats.net/services/GetUserPlacesWithin" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetUserPlacesWithinAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <soap:operation soapAction="http://skats.net/services/GetPlacesInside" style="rpc" />
      <wsdl:input>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
        <soap:header message="tns:GetPlacesInsideAuthenticationHeader" part="AuthenticationHeader" use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="http://skats.net/services/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GeoPlacesHttpGet" type="tns:GeoPlacesHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="GetPlacesWithin">
      <http:operation location="/GetPlacesWithin" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <http:operation location="/GetPlacesWithinFiltered" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <http:operation location="/GetDistanceBetweenPlaces" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <http:operation location="/GetPlaceDetails" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <http:operation location="/GetAllStates" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <http:operation location="/GetAllUserPlaces" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <http:operation location="/GetUserPlacesWithin" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <http:operation location="/GetPlacesInside" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="GeoPlacesHttpPost" type="tns:GeoPlacesHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="GetPlacesWithin">
      <http:operation location="/GetPlacesWithin" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesWithinFiltered">
      <http:operation location="/GetPlacesWithinFiltered" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDistanceBetweenPlaces">
      <http:operation location="/GetDistanceBetweenPlaces" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlaceDetails">
      <http:operation location="/GetPlaceDetails" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllStates">
      <http:operation location="/GetAllStates" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllUserPlaces">
      <http:operation location="/GetAllUserPlaces" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserPlacesWithin">
      <http:operation location="/GetUserPlacesWithin" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetPlacesInside">
      <http:operation location="/GetPlacesInside" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GeoPlaces">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">GeoPlaces Service is the evolution of ZipCode Lookup service. It enhances ZipCode Lookup by adding support for city names. Now you can find near by zip codes and cities, find distance between zip codes and cities, get coordinates of zip codes and cities. Place's coordinates are determined using an approximate center point of the shape.</documentation>
    <wsdl:port name="GeoPlacesSoap" binding="tns:GeoPlacesSoap">
      <soap:address location="http://www.codebump.com/services/PlaceLookup.asmx" />
    </wsdl:port>
    <wsdl:port name="GeoPlacesHttpGet" binding="tns:GeoPlacesHttpGet">
      <http:address location="http://www.codebump.com/services/PlaceLookup.asmx" />
    </wsdl:port>
    <wsdl:port name="GeoPlacesHttpPost" binding="tns:GeoPlacesHttpPost">
      <http:address location="http://www.codebump.com/services/PlaceLookup.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>